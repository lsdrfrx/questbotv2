services:
  postgres:
    image: postgres
    restart: always
    env_file: .env
    volumes:
      - /private/var/lib/postgresql:/opt/questbot/postgres
    healthcheck:
      test: pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - web

  api:
    build:
      context: ./questbot_api
      dockerfile: ./Dockerfile
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
        restart: true
    env_file: .env
    healthcheck:
      test: curl -f api:3000
      timeout: 3s
      interval: 10s
      retries: 5
    networks:
      - web
    ports:
      - 9933:3000

  bot:
    build:
      context: .
      dockerfile: ./questbot/Dockerfile
    restart: always
    depends_on:
      api:
        condition: service_healthy
        restart: true
    env_file: .env
    networks:
      - web

  ui:
    build:
      context: ./questbot_ui
      dockerfile: ./Dockerfile
    restart: always
    depends_on:
      api:
        condition: service_healthy
        restart: true
    env_file: .env
    ports:
      - 9900:9900
    networks: 
      - web

volumes:
  questbot_db:

networks:
  web:
    driver: bridge
